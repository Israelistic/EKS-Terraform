
# Create Deployment
kubectl create deployment <Deplyment-Name> --image=<Container-Image
kubectl create deployment nginx --image=nginx --dry-run=client -o yaml | tee nginx-deployment.yaml | kubectl apply -f -

# Verify Deployment
kubectl get deployments
kubectl get deploy 


# Describe Deployment
kubectl describe deployment <deployment-name>

# Verify ReplicaSet
kubectl get rs

# Verify Pod
kubectl get po


- Scale the deployment to increase the number of replicas (pods)

# Scale Up the Deployment
kubectl scale --replicas=20 deployment/<Deployment-Name>
kubectl scale deployment/nginx --replicas=10; watch kubectl get pods -o wide

# Verify Deployment
kubectl get deploy

# Verify ReplicaSet
kubectl get rs

# Verify Pods
kubectl get po

# Expose Deployment as a Service
kubectl expose deployment <Deployment-Name>  --type=NodePort --port=80 --target-port=80 --name=<Service-Name-To-Be-Created>
kubectl expose deployment nginx --type=NodePort --port=80 --target-port=80 --name=my-nginx-svc


#rollout

kubectl rollout history deployment/nginx
kubectl rollout status deployment
#annotate
kubectl annotate deployment/nginx kubernetes.io/change-cause="initial deployment"

kubectl rollout history deployment/nginx


#Modify the nginx-deployment.yaml file so that it is using 12 replicas, for example -
cat <<EOF > nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 12
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}
status: {}
EOF


kubectl apply -f nginx-deployment.yaml; watch kubectl get pods -o wide
kubectl get deployments -o wide
kubectl get deployment/nginx -o yaml

#Modify the nginx-deployment.yaml file so that it is using the image nginx:stable, for example -#
cat <<EOF > nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: nginx
  name: nginx
spec:
  replicas: 12
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: nginx
    spec:
      containers:
      - image: nginx:stable
        name: nginx
        resources: {}
status: {}
EOF
#Let's apply these changes and watch the rollout as it happens
kubectl apply -f nginx-deployment.yaml && kubectl rollout status deployment/nginx

#We will now see 12 replicas, in the deployment status 
kubectl get deployments -o wide

# Changing the image would have resulted in the creation of a new replicaSet -
kubectl get replicasetk get 

#And we can see that our pods, are now using this new replicaSet -
kubectl get pods -o wide

#Letâ€™s track this changes
kubectl annotate deployment/nginx kubernetes.io/change-cause="change image to nginx:stable"
kubectl rollout history deployment/nginx